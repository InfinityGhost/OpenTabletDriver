<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namesplace:System"
        xmlns:vm="clr-namespace:OpenTabletDriverGUI.ViewModels;assembly=OpenTabletDriverGUI"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ns="clr-namespace:OpenTabletDriverGUI.Views;assembly=OpenTabletDriverGUI"
        xmlns:cursor="clr-namespace:TabletDriverLib.Interop.Cursor;assembly=TabletDriverLib"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="OpenTabletDriverGUI.Views.MainWindow"
        Icon="/Assets/avalonia-logo.ico"
        Width="1280" Height="720"
        MinWidth="640" MinHeight="480"
        Title="OpenTabletDriverGUI">
    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>
    <Window.Styles>
        <Style Selector="TextBlock.h1">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style Selector="Border.r">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderLowBrush}"/>
            <Setter Property="CornerRadius" Value="5"/>
        </Style>
    </Window.Styles>

    <Grid RowDefinitions="Auto,*,Auto,Auto">
        <Menu Grid.Row="0">
            <MenuItem Header="File">
                <MenuItem Header="Exit" Command="{Binding $parent[Window].Close}"/>
            </MenuItem>
            <MenuItem Header="Settings">
                <MenuItem Header="Reset to defaults" Command="{Binding UseDefaultSettings}"/>
                <MenuItem Header="Load..." Command="{Binding LoadSettingsDialog}"/>
                <MenuItem Header="Save..." Command="{Binding SaveSettingsDialog}"/>
                <MenuItem Header="Themes">
                    <MenuItem.Styles>
                        <Style Selector="MenuItem">
                            <Setter Property="Command" Value="{Binding SetTheme}"/>
                        </Style>
                    </MenuItem.Styles>
                    <MenuItem Header="Light" CommandParameter="Light"/>
                    <MenuItem Header="Dark" CommandParameter="Dark"/>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Tablets">
                <MenuItem Header="Detect tablet" Command="{Binding DetectTablet}"/>
                <MenuItem Header="Open configuration manager..." Command="{Binding OpenConfigurationManager}"/>
                <MenuItem Header="Load configuration directory..." Command="{Binding OpenTabletConfigurationFolder}"/>
            </MenuItem>
            <MenuItem Header="Output Mode">
                <MenuItem.Styles>
                    <Style Selector="MenuItem">
                        <Setter Property="Command" Value="{Binding SetMode}"/>
                    </Style>
                </MenuItem.Styles>
                <MenuItem Header="Absolute" CommandParameter="Absolute"/>
            </MenuItem>
        </Menu>
        <TabControl Grid.Row="1">
            <TabItem Header="Area Settings">
                <Border Classes="Tab">
                    <Grid RowDefinitions="*,*,Auto" HorizontalAlignment="Stretch" Margin="100,0">
                        <ns:AreaSetter Grid.Row="0"
                            Title="Display Area"
                            MeasurementUnit="px"
                            AreaWidth="{Binding Settings.DisplayWidth}"
                            AreaHeight="{Binding Settings.DisplayHeight}"
                            AreaXOffset="{Binding Settings.DisplayX}"
                            AreaYOffset="{Binding Settings.DisplayY}"
                            BackgroundWidth="{Binding Display.Width}"
                            BackgroundHeight="{Binding Display.Height}"/>
                        <ns:AreaSetter Grid.Row="1"
                            Title="Tablet Area"
                            MeasurementUnit="mm"
                            AreaWidth="{Binding Settings.TabletWidth}"
                            AreaHeight="{Binding Settings.TabletHeight}"
                            AreaXOffset="{Binding Settings.TabletX}"
                            AreaYOffset="{Binding Settings.TabletY}"
                            BackgroundWidth="{Binding FullTabletWidth}"
                            BackgroundHeight="{Binding FullTabletHeight}"/>
                        <Border Classes="r" Grid.Row="2" Margin="5">
                            <StackPanel Orientation="Horizontal" Margin="5">
                                <CheckBox Content="Enable clipping" IsChecked="{Binding Settings.EnableClipping}"/>
                            </StackPanel>
                        </Border>
                    </Grid>
                </Border>
            </TabItem>
            <TabItem Header="Input Bindings">
                <Border Classes="Tab">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <StackPanel Margin="5">
                            <Border Classes="r">
                                <Grid RowDefinitions="Auto,Auto,Auto" Margin="5">
                                    <TextBlock Grid.Row="0" Text="Tip Button Activation Pressure"/>
                                    <Grid Grid.Row="1" ColumnDefinitions="*,Auto" Margin="5">
                                        <Border Classes="r" BorderBrush="{DynamicResource ThemeControlHighBrush}" Grid.Column="0" Margin="0,0,5,0">
                                            <Slider Margin="1"
                                                Minimum="0" Maximum="100"
                                                TickFrequency="1" IsSnapToTickEnabled="True"
                                                Value="{Binding Settings.TipActivationPressure}"/>
                                        </Border>
                                        <TextBox Grid.Column="1" MinWidth="100"
                                            Text="{Binding Settings.TipActivationPressure}"/>
                                        <TextBlock Grid.Column="1" Margin="5"
                                            IsHitTestVisible="False" HorizontalAlignment="Right" Text="%"/>
                                    </Grid>
                                    <Grid Grid.Row="2" RowDefinitions="Auto,Auto">
                                        <TextBlock Grid.Row="0" Text="Tip Button"/>
                                        <ComboBox Name="MouseButtonsBox" Grid.Row="1" Margin="5"
                                            SelectedItem="{Binding Settings.TipButton}"/>
                                    </Grid>
                                </Grid>
                            </Border>
                        </StackPanel>
                    </ScrollViewer>
                </Border>
            </TabItem>
            <TabItem Header="Console">
                <Border Classes="Tab">
                    <Grid RowDefinitions="*,Auto">
                        <ns:TraceDisplay TraceListener="{Binding TraceListener}"/>
                        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,5">
                            <StackPanel.Styles>
                                <Style Selector="CheckBox">
                                    <Setter Property="Margin" Value="5,0,0,0"/>
                                </Style>
                            </StackPanel.Styles>
                            <CheckBox Content="Debugging" IsChecked="{Binding Debugging}"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </TabItem>
        </TabControl>
        <Grid Grid.Row="2">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5">
                <Button Content="Enable input hook" Command="{Binding ToggleHook}" IsVisible="{Binding !InputHooked}"/>
                <Button Content="Disable input hook" Command="{Binding ToggleHook}" IsVisible="{Binding InputHooked}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5">
                <Button Content="Apply Settings" Command="{Binding UpdateSettings}"/>
            </StackPanel>
        </Grid>
        <Border Grid.Row="3" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource ThemeBorderMidBrush}">
            <TextBlock Text="{Binding TraceListener.Status}"/>
        </Border>
    </Grid>

</Window>
