<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namesplace:System"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:OpenTabletDriver.Controls;assembly=OpenTabletDriver"
        xmlns:cursor="clr-namespace:TabletDriverLib.Interop.Cursor;assembly=TabletDriverLib"
        xmlns:cvt="clr-namespace:OpenTabletDriver.Converters;assembly=OpenTabletDriver"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="OpenTabletDriver.Windows.MainWindow"
        Icon="avares://OpenTabletDriver/Assets/otd.ico"
        Width="1100" Height="700"
        MinWidth="960" MinHeight="700"
        Title="OpenTabletDriver">
    <Window.Styles>
        <Style Selector="TextBlock.h1">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style Selector="Border.r">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderLowBrush}"/>
            <Setter Property="CornerRadius" Value="5"/>
        </Style>
        <Style Selector="ComboBox">
            <Setter Property="MinWidth" Value="225"/>
            <Setter Property="Height" Value="23"/>
        </Style>
        <Style Selector="ComboBox > Border">
            <Setter Property="CornerRadius" Value="5"/>
        </Style>
        <Style Selector="TextBox > Border">
            <Setter Property="CornerRadius" Value="5"/>
        </Style>
    </Window.Styles>
    <Window.Resources>
        <cvt:BindingReferenceConverter x:Key="BindingReferenceConverter"/>
    </Window.Resources>

    <Grid RowDefinitions="Auto,*,Auto,Auto">
        <Menu Grid.Row="0">
            <MenuItem Header="File">
                <MenuItem Header="About" Command="{Binding ShowAbout}"/>
                <MenuItem Header="Exit" Command="{Binding $parent[Window].Close}"/>
            </MenuItem>
            <MenuItem Header="Settings">
                <MenuItem Header="Reset to defaults" Command="{Binding ResetToDefaults}"/>
                <MenuItem Header="Reset window size" Command="{Binding ResetWindowSize}"/>
                <MenuItem Header="Load..." Command="{Binding LoadSettingsDialog}"/>
                <MenuItem Header="Save" Command="{Binding SaveSettingsDefault}"/>
                <MenuItem Header="Save as..." Command="{Binding SaveSettingsDialog}"/>
                <MenuItem Header="Themes">
                    <MenuItem.Styles>
                        <Style Selector="MenuItem">
                            <Setter Property="Command" Value="{Binding UpdateTheme}"/>
                        </Style>
                    </MenuItem.Styles>
                    <MenuItem Header="Light" CommandParameter="Light"/>
                    <MenuItem Header="Dark" CommandParameter="Dark"/>
                </MenuItem>
                <MenuItem Header="Open plugin directory..." Command="{Binding OpenPluginDirectory}"/>
            </MenuItem>
            <MenuItem Header="Tablets">
                <MenuItem Header="Detect tablet" Command="{Binding DetectTablets}"/>
                <MenuItem Header="Open tablet debugger..." Command="{Binding OpenTabletDebugger}"/>
                <MenuItem Header="Open configuration manager..." Command="{Binding OpenConfigurationManager}"/>
                <MenuItem Header="Load configuration directory..." Command="{Binding OpenTabletConfigurationFolder}"/>
            </MenuItem>
            <MenuItem Header="Output Mode" Items="{Binding OutputModes}">
                <MenuItem.ItemTemplate>
                    <DataTemplate>
                        <MenuItem Header="{Binding Name}" CommandParameter="{Binding Path}"/>
                    </DataTemplate>
                </MenuItem.ItemTemplate>
                <MenuItem.Styles>
                    <Style Selector="MenuItem > MenuItem">
                        <Setter Property="Command" Value="{Binding $parent[Window].DataContext.SetOutputMode}"/>
                        <Setter Property="CommandParameter" Value="{Binding}"/>
                    </Style>
                </MenuItem.Styles>
            </MenuItem>
            <MenuItem Header="Diagnostics">
                <MenuItem Header="Copy diagnostic dump" Command="{Binding CopyDiagnosticDump}"/>
                <MenuItem Header="Export diagnostic dump..." Command="{Binding ExportDiagnosticDump}"/>
            </MenuItem>
        </Menu>
        <TabControl Grid.Row="1" SelectedIndex="{Binding TabIndex}">
            <TabItem Header="Absolute Mode Settings" IsVisible="{Binding IsAbsolute}">
                <Border>
                    <Grid RowDefinitions="*,*,Auto" ColumnDefinitions="*,Auto" HorizontalAlignment="Stretch" Margin="100,0">
                        <controls:AreaSetter Grid.Row="0" Grid.ColumnSpan="2"
                            Title="Display Area"
                            MeasurementUnit="px"
                            AreaWidth="{Binding Settings.DisplayWidth}"
                            AreaHeight="{Binding Settings.DisplayHeight}"
                            AreaXOffset="{Binding Settings.DisplayX}"
                            AreaYOffset="{Binding Settings.DisplayY}"
                            RotationAngle="{Binding Settings.DisplayRotation}"
                            BackgroundWidth="{Binding VirtualScreen.Width}"
                            BackgroundHeight="{Binding VirtualScreen.Height}"/>
                        <Grid Grid.Row="0" Grid.Column="1" VerticalAlignment="Top" ColumnDefinitions="Auto,Auto" Margin="5,3">
                            <TextBlock Grid.Column="0"
                                Margin="5,0"
                                VerticalAlignment="Center"
                                Text="Move area to"/>
                            <ComboBox Grid.Column="1"
                                Items="{Binding VirtualScreen.Displays}"
                                SelectedItem="{Binding SelectedDisplay, Mode=TwoWay}"/>
                        </Grid>
                        <controls:AreaSetter Grid.Row="1" Grid.ColumnSpan="2" MinWidth="100"
                            Title="Tablet Area"
                            MeasurementUnit="mm"
                            EnableRotation="True"
                            AreaWidth="{Binding Settings.TabletWidth}"
                            AreaHeight="{Binding Settings.TabletHeight}"
                            AreaXOffset="{Binding Settings.TabletX}"
                            AreaYOffset="{Binding Settings.TabletY}"
                            RotationAngle="{Binding Settings.TabletRotation}"
                            BackgroundWidth="{Binding Tablet.Width}"
                            BackgroundHeight="{Binding Tablet.Height}"/>
                        <Border Classes="r" Grid.Row="2" Grid.ColumnSpan="2" Margin="5">
                            <Grid>
                                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="5">
                                    <StackPanel.Styles>
                                        <Style Selector="CheckBox">
                                            <Setter Property="Margin" Value="0,0,5,0"/>
                                        </Style>
                                    </StackPanel.Styles>
                                    <CheckBox Content="Enable on startup" IsChecked="{Binding Settings.AutoHook}"
                                        ToolTip.Tip="Enables the driver as soon as the tablet is detected."/>
                                    <CheckBox Content="Area clipping" IsChecked="{Binding Settings.EnableClipping}"
                                        ToolTip.Tip="Locks your pen inputs within the areas you set."/>
                                    <CheckBox Content="Lock aspect ratio" IsChecked="{Binding Settings.LockAspectRatio}"
                                        ToolTip.Tip="Locks all areas to the same aspect ratio."/>
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Margin="5">
                                    <TextBlock Text="{Binding Path=Settings.DisplayRatio, StringFormat=Display \{0\}:1}" VerticalAlignment="Center"/>
                                    <Grid Background="{DynamicResource ThemeAccentBrush2}" Height="20" Width="2" VerticalAlignment="Center" Margin="10,0"/>
                                    <TextBlock Text="{Binding Path=Settings.TabletRatio, StringFormat=Tablet \{0\}:1}" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
            </TabItem>
            <TabItem Header="Relative Mode Settings" IsVisible="{Binding IsRelative}">
                <Border>
                    <Border.Styles>
                        <Style Selector="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="Margin" Value="0,5,0,0"/>
                        </Style>
                        <Style Selector="TextBlock.UnitLabel">
                            <Setter Property="Margin" Value="0,0,10,10"/>
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                            <Setter Property="VerticalAlignment" Value="Bottom"/>
                            <Setter Property="IsHitTestVisible" Value="False"/>
                        </Style>
                        <Style Selector="UniformGrid > Border">
                            <Setter Property="Margin" Value="5"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderLowBrush}"/>
                            <Setter Property="CornerRadius" Value="5"/>
                        </Style>
                        <Style Selector="TextBox">
                            <Setter Property="Margin" Value="5"/>
                            <Setter Property="TextAlignment" Value="Left"/>
                        </Style>
                    </Border.Styles>
                    <Grid Margin="100,0">
                        <UniformGrid Margin="0,5" Rows="1" VerticalAlignment="Bottom">
                            <Border>
                                <Grid RowDefinitions="*,Auto">
                                    <TextBlock Grid.Row="0" Text="Horizontal Sensitivity"/>
                                    <TextBox Grid.Row="1" Text="{Binding Settings.XSensitivity}"/>
                                    <TextBlock Grid.Row="1" Classes="UnitLabel" Text="mm/px"/>
                                </Grid>
                            </Border>
                            <Border>
                                <Grid RowDefinitions="Auto,*">
                                    <TextBlock Grid.Row="0" Text="Vertical Sensitivity"/>
                                    <TextBox Grid.Row="1" Text="{Binding Settings.YSensitivity}"/>
                                    <TextBlock Grid.Row="1" Classes="UnitLabel" Text="mm/px"/>
                                </Grid>
                            </Border>
                            <Border>
                                <Grid RowDefinitions="Auto,*">
                                    <TextBlock Grid.Row="0" Text="Reset time"/>
                                    <TextBox Grid.Row="1" Text="{Binding Settings.ResetTime.TotalMilliseconds}"/>
                                    <TextBlock Grid.Row="1" Classes="UnitLabel" Text="ms"/>
                                </Grid>
                            </Border>
                        </UniformGrid>
                    </Grid>
                </Border>
            </TabItem>
            <TabItem Header="Bindings" IsVisible="{Binding IsBindable}">
                <Border>
                    <UniformGrid Rows="1">
                        <UniformGrid.Styles>
                            <Style Selector="UniformGrid > Border">
                                <Setter Property="Margin" Value="5"/>
                            </Style>
                            <Style Selector="ItemsControl > Border">
                                <Setter Property="Margin" Value="5"/>
                                <Setter Property="CornerRadius" Value="5"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderLowBrush}"/>
                            </Style>
                            <Style Selector="ItemsControl > Border > Grid">
                            </Style>
                            <Style Selector="Button.bind">
                                <Setter Property="Command" Value="{Binding UpdateBinding}"/>
                                <Setter Property="Margin" Value="5"/>
                            </Style>
                            <Style Selector="ItemsControl > Border > Grid > TextBlock">
                                <Setter Property="Margin" Value="5,5,5,0"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                            </Style>
                            <Style Selector="UniformGrid > Border > Grid > TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="Margin" Value="5"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Style>
                        </UniformGrid.Styles>
                        <Border Classes="r">
                            <Grid RowDefinitions="Auto,*" Margin="5">
                                <TextBlock Grid.Row="0" Text="Pen Tip Binding"/>
                                <ItemsControl Grid.Row="1">
                                    <Border>
                                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*,Auto" Margin="5">
                                            <TextBlock Grid.Row="0" Grid.ColumnSpan="2" Margin="5,0,5,5" Text="Tip Button Activation Pressure"/>
                                            <Border Grid.Row="1" Classes="r" BorderBrush="{DynamicResource ThemeControlHighBrush}" Grid.Column="0" Margin="0,0,5,0">
                                                <Slider Margin="1"
                                                    Minimum="0" Maximum="100"
                                                    TickFrequency="1" IsSnapToTickEnabled="True"
                                                    Value="{Binding Settings.TipActivationPressure}"/>
                                            </Border>
                                            <TextBox Grid.Row="1" Grid.Column="1" MinWidth="100"
                                                Text="{Binding Settings.TipActivationPressure}"/>
                                            <TextBlock Grid.Row="1" Grid.Column="1" Margin="5"
                                                IsHitTestVisible="False" HorizontalAlignment="Right" Text="%"/>
                                        </Grid>
                                    </Border>
                                    <Border>
                                        <Grid RowDefinitions="Auto,*">
                                            <TextBlock Grid.Row="0" Text="Tip Button"/>
                                            <Button Grid.Row="1" Classes="bind"
                                                Content="{Binding Settings.TipButton, Converter={StaticResource BindingReferenceConverter}}"
                                                CommandParameter="TipButton"/>
                                        </Grid>
                                    </Border>
                                </ItemsControl>
                            </Grid>
                        </Border>
                        <Border Classes="r">
                            <Grid RowDefinitions="Auto,*" Margin="5">
                                <TextBlock Grid.Row="0" Text="Pen Buttons"/>
                                <ItemsControl Grid.Row="1">
                                    <Border>
                                        <Grid RowDefinitions="Auto,*">
                                            <TextBlock Text="Pen Button 1"/>
                                            <Button Grid.Row="1" Classes="bind"
                                                Content="{Binding Settings.PenButtons[0], Converter={StaticResource BindingReferenceConverter}}"
                                                CommandParameter="PenButtons[0]"/>
                                        </Grid>
                                    </Border>
                                    <Border>
                                        <Grid RowDefinitions="Auto,*">
                                            <TextBlock Text="Pen Button 2"/>
                                            <Button Grid.Row="1" Classes="bind"
                                                Content="{Binding Settings.PenButtons[1], Converter={StaticResource BindingReferenceConverter}}"
                                                CommandParameter="PenButtons[1]"/>
                                        </Grid>
                                    </Border>
                                </ItemsControl>
                            </Grid>
                        </Border>
                        <Border Classes="r">
                            <Grid RowDefinitions="Auto,*" Margin="5">
                                <TextBlock Grid.Row="0" Text="Express Keys"/>
                                <ItemsControl Grid.Row="1">
                                    <Border>
                                        <Grid RowDefinitions="Auto,*">
                                            <TextBlock Text="Express Key 1"/>
                                            <Button Grid.Row="1" Classes="bind"
                                                Content="{Binding Settings.AuxButtons[0], Converter={StaticResource BindingReferenceConverter}}"
                                                CommandParameter="AuxButtons[0]"/>
                                        </Grid>
                                    </Border>
                                    <Border>
                                        <Grid RowDefinitions="Auto,*">
                                            <TextBlock Text="Express Key 2"/>
                                            <Button Grid.Row="1" Classes="bind"
                                                Content="{Binding Settings.AuxButtons[1], Converter={StaticResource BindingReferenceConverter}}"
                                                CommandParameter="AuxButtons[1]"/>
                                        </Grid>
                                    </Border>
                                    <Border>
                                        <Grid RowDefinitions="Auto,*">
                                            <TextBlock Text="Express Key 3"/>
                                            <Button Grid.Row="1" Classes="bind"
                                                Content="{Binding Settings.AuxButtons[2], Converter={StaticResource BindingReferenceConverter}}"
                                                CommandParameter="AuxButtons[2]"/>
                                        </Grid>
                                    </Border>
                                    <Border>
                                        <Grid RowDefinitions="Auto,*">
                                            <TextBlock Text="Express Key 4"/>
                                            <Button Grid.Row="1" Classes="bind"
                                                Content="{Binding Settings.AuxButtons[3], Converter={StaticResource BindingReferenceConverter}}"
                                                CommandParameter="AuxButtons[3]"/>
                                        </Grid>
                                    </Border>
                                    <Border>
                                        <Grid RowDefinitions="Auto,*">
                                            <TextBlock Text="Express Key 5"/>
                                            <Button Grid.Row="1" Classes="bind"
                                                Content="{Binding Settings.AuxButtons[4], Converter={StaticResource BindingReferenceConverter}}"
                                                CommandParameter="AuxButtons[4]"/>
                                        </Grid>
                                    </Border>
                                    <Border>
                                        <Grid RowDefinitions="Auto,*">
                                            <TextBlock Text="Express Key 6"/>
                                            <Button Grid.Row="1" Classes="bind"
                                                Content="{Binding Settings.AuxButtons[5], Converter={StaticResource BindingReferenceConverter}}"
                                                CommandParameter="AuxButtons[5]"/>
                                        </Grid>
                                    </Border>
                                    <Border>
                                        <Grid RowDefinitions="Auto,*">
                                            <TextBlock Text="Express Key 7"/>
                                            <Button Grid.Row="1" Classes="bind"
                                                Content="{Binding Settings.AuxButtons[6], Converter={StaticResource BindingReferenceConverter}}"
                                                CommandParameter="AuxButtons[6]"/>
                                        </Grid>
                                    </Border>
                                    <Border>
                                        <Grid RowDefinitions="Auto,*">
                                            <TextBlock Text="Express Key 8"/>
                                            <Button Grid.Row="1" Classes="bind"
                                                Content="{Binding Settings.AuxButtons[7], Converter={StaticResource BindingReferenceConverter}}"
                                                CommandParameter="AuxButtons[7]"/>
                                        </Grid>
                                    </Border>
                                </ItemsControl>
                            </Grid>
                        </Border>
                    </UniformGrid>
                </Border>
            </TabItem>
            <TabItem Header="Filters" IsVisible="{Binding IsFilterable}">
                <Border>
                    <controls:FilterEditor Name="FilterEditor"/>
                </Border>
            </TabItem>
            <TabItem Header="Plugins">
                <Border>
                    <controls:ResidentPluginEditor Name="ResidentPluginEditor"/>
                </Border>
            </TabItem>
            <TabItem Header="Console">
                <Grid RowDefinitions="*,Auto">
                    <controls:LogView Messages="{Binding Messages}"/>
                    <Border Grid.Row="1" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource ThemeBorderLowBrush}">
                        <Border.Styles>
                            <Style Selector="CheckBox">
                                <Setter Property="Margin" Value="5,0"/>
                            </Style>
                            <Style Selector="Button">
                                <Setter Property="Margin" Value="5,0,0,0"/>
                            </Style>
                        </Border.Styles>
                        <Grid ColumnDefinitions="*,Auto">
                            <StackPanel Orientation="Horizontal" Margin="0,5">
                                <Button Content="Copy all" Command="{Binding CopyAllLog}"/>
                                <Button Content="Export..." Command="{Binding ExportLogToFile}"/>
                            </StackPanel>
                            <CheckBox Grid.Column="1" Content="Debugging" IsChecked="{Binding Driver.Debugging}"/>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
        </TabControl>
        <Grid Grid.Row="2">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5">
                <Button Content="Enable Driver" Command="{Binding ToggleDriverEnabled}" IsVisible="{Binding !DriverEnabled}"/>
                <Button Content="Disable Driver" Command="{Binding ToggleDriverEnabled}" IsVisible="{Binding DriverEnabled}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5">
                <StackPanel.Styles>
                    <Style Selector="Button">
                        <Setter Property="Margin" Value="5,0,0,0"/>
                    </Style>
                </StackPanel.Styles>
                <Button Content="Save Settings" Command="{Binding SaveSettingsDefault}"/>
                <Button Content="Apply Settings" Command="{Binding ApplySettings}" CommandParameter="{Binding $parent[Window].DataContext.Settings}"/>
            </StackPanel>
        </Grid>
        <Border Grid.Row="3" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource ThemeBorderMidBrush}">
            <controls:StatusBar CurrentStatus="{Binding StatusMessage}"/>
        </Border>
    </Grid>

</Window>
